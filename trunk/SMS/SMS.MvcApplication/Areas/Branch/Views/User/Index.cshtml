@using SMS.Common.Storage
@using SMS.Data.Dtos
@using SMS.MvcApplication.Models
@model UserModel

<script id="record-tmpl" type="text/x-jquery-tmpl">
    <tr class="admin-record-detail" style="display: none;">
        <td class="arrow-detail center">↳</td>
        <td colspan="6">
            <table class="no-border width500px">
                <tr>
                    <td data-labelID="lblUserName">User name</td>
                    <td>
                        ${User.Username}
                    </td>
                </tr>
                <tr>
                    <td data-labelID="lblPassword">Password</td>
                    <td>
                        <input type="password" name="password" value="" id="password-${User.ID}"/>
                    </td>
                </tr>
                <tr>
                    <td data-labelID="lblFirstName">First name</td>
                    <td>
                        <input type="text" name="firstName" value="${User.FirstName}" id="firstName-${User.ID}"/>
                    </td>
                </tr>
                <tr>
                    <td data-labelID="lblLastName">Last name</td>
                    <td>
                        <input type="text" name="lastName" value="${User.LastName}" id="lastName-${User.ID}"/>
                    </td>
                </tr>
                <tr>
                    <td data-labelID="lblCellPhone">Cell phone</td>
                    <td>
                        <input type="text" name="cellPhone" value="${User.CellPhone}" id="cellPhone-${User.ID}"/>
                    </td>
                </tr>
                <tr>
                    <td data-labelID="lblEmail">Email</td>
                    <td>
                        <input type="text" name="email" value="${User.Email}" id="email-${User.ID}"/>
                    </td>
                </tr>
                <tr>
                    <td data-labelID="lblAddress">Address</td>
                    <td>
                        <input type="text" name="address" value="${User.Address}" id="address-${User.ID}"/>
                    </td>
                </tr>
                <tr>
                    <td data-labelID="lblSuspended">Suspended</td>
                    <td>
                        {{if UserConfig.IsSuspended}}
                        <input type="checkbox" name="suspended" checked id="suspended-${User.ID}"/>
                        {{else}}
                        <input type="checkbox" name="suspended" id="suspended-${User.ID}"/>
                        {{/if}}
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div class="row">
                            <div class="four columns right" data-labelID="lblRoles">
                                Roles
                            </div>
                            <div class="three columns">
                            </div>
                            <div class="four columns left" data-labelID="lblAssignedRoles">
                                Assigned roles
                            </div>
                        </div>
                        <div class="row">
                            <div class="four columns right">
                                <select id="originalRoles-${User.ID}" multiple="multiple" size="7" class="full-width">
                                    @foreach (RoleDto role in ViewBag.ListRole)
                                    {
                                        <text>
                                            <option value="@role.ID">@role.Name</option>
                                        </text>
                                    }
                                </select>
                            </div>
                            <div class="three columns center">
                                <button id="addRoles-${User.ID}" class="assignButton">></button>
                                <button id="addAllRoles-${User.ID}" class="assignButton">>></button>
                                <button id="removeAllRoles-${User.ID}" class="assignButton"><<</button>
                                <button id="removeRoles-${User.ID}" class="assignButton"><</button>
                            </div>
                            <div class="four columns">
                                <select name="assignedRoles" id="assignedRoles-${User.ID}" multiple="multiple" size="7" class="full-width">
                                    {{each User.Roles}}
                                    <option value="${ID}">${Name}</option>
                                    {{/each}}
                                </select>
                            </div>
                            {{html buildScriptForAssignListBox(User.ID)}}
                        </div>
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        <button id="save-${User.ID}" data-labelID="lblSave">Save</button>
                        <button id="cancel-${User.ID}" data-labelID="lblCancel">Cancel</button>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</script>

<script type="text/javascript" src="~/Scripts/assignListBox.js"></script>
<script type="text/javascript">
    function buildScriptForAssignListBox(id) {
        var param = '"originalRoles-' + id + '", "' + 'assignedRoles-' + id + '", "' + 'addRoles-' + id + '", "' + 'removeRoles-' + id + '", "' + 'addAllRoles-' + id + '", "' + 'removeAllRoles-' + id + '"';

        return '<sc' + 'ript type="text/javascript">'
            + 'var listBox = new AssignListBox(' + param + ');'
            + 'listBox.bindEvents();'
            + '</sc' + 'ript>';
    }
</script>

<div id="content">
    <div class="row admin-page-title">
        <h4>Maintain User</h4>
    </div>

    <table id="record-table" class="display">
        <thead>
            <tr>
                <th data-labelID="lblID">ID</th>
                <th data-labelID="lblUserName">User name</th>
                <th data-labelID="lblFirstName">First name</th>
                <th data-labelID="lblLastName">Last name</th>
                <th data-labelID="lblSuspended">Suspended</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dto in Model.Users)
            {
                <tr data-id="@dto.ID">
                    <td>@dto.ID</td>
                    <td>@dto.Username</td>
                    <td>@dto.FirstName</td>
                    <td>@dto.LastName</td>
                    @if (Model.UserConfigs.SingleOrDefault(x => x.UserID == dto.ID) == null)
                    {
                        <td>@false</td>
                    }
                    else
                    {
                        <td>@Model.UserConfigs.Single(x => x.UserID == dto.ID).IsSuspended</td>
                    }
                    <td class="center">
                        <a href="#" class="edit-record" data-id="@dto.ID"><img src="~/Images/IconControls/edit-icon.png" alt="edit record" /></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#record-table').DataTable({
            "pageLength": @SmsCache.UserContext.PageSize,
            scrollY: "200px",
            searching: true,
            ordering: true,
            "info": true,
            "lengthChange": false,
            "jQueryUI": true,
            paging: true,
            language: {
                "emptyTable": CONST_DATATABLE_NODATA,
                "info": CONST_DATATABLE_SHOWINGRECORDS,
                "infoEmpty": CONST_DATATABLE_NOENTRIES,
                "infoFiltered": CONST_DATATABLE_FILTER,
                "lengthMenu": CONST_DATATABLE_SHOWENTRIES,
                "search": CONST_DATATABLE_SEARCH,
                "zeroRecords": CONST_DATATABLE_NOMATCHINGDATA,
                "paginate": {
                    "first": CONST_DATATABLE_FIRST,
                    "last": CONST_DATATABLE_LAST,
                    "next": CONST_DATATABLE_NEXT,
                    "previous": CONST_DATATABLE_PREVIOUS
                }
            }
        });
        
        // set height content datatable
        var contentHeight = $('#content').height() - $('#content .admin-page-title').height();
        var height1 = 0;
        $('#record-table_wrapper > .ui-widget-header').each(function (idx, element) {
            height1 += $(element).outerHeight();
        });
        var height2 = $('#record-table_wrapper > .dataTables_scroll > .dataTables_scrollHead').outerHeight();
        var height3 = $('#record-table_wrapper > .dataTables_scroll > .dataTables_scrollFoot').outerHeight();
        var targetHeight = contentHeight - height1 - height2 - height3 - 10; // subtract 2 more px due to the border and padding bottom
        $('#record-table_wrapper > .dataTables_scroll > .dataTables_scrollBody').css('height', targetHeight + 'px');

        /********************
        // fix column header datatable
        $(' .dataTables_scrollHeadInner, .dataTables_scrollHeadInner > table').css('width', '').css('padding-left', '');
        var headerColumns = $(' .dataTables_scrollHead table > thead > tr:first-child th');
        var columns = $('#record-table > tbody > tr:first-child td');
        for (var i = 0; i < columns.length; i++) {
            $(headerColumns[i]).css('width', $(columns[i]).width());
        }
        var widthHeader = $('.dataTables_scrollHead').outerWidth();
        var widthContent = $('#record-table').outerWidth();
        $(' .dataTables_scrollHeadInner').css('padding-right', (widthHeader - widthContent) + 'px');
        ********************/
        
        $('#record-table a.edit-record').click(function () {
            var record = $(this).parent().parent();
            if (record.length == 0 || record.next().hasClass('admin-record-detail')) {
                cancelRecord();
                return false;
            }

            var id = $(this).attr('data-id');
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetUserInfo")',
                data: { userID: id }
            }).done(function (result) {
                if (!result.Success) {
                    return;
                }
                cancelRecord();

                var place = $('tr[data-id="' + result.Data.User.ID + '"]');
                if (place.length == 0)
                    return;

                $('#record-tmpl').tmpl(result.Data).insertAfter(place);

                $('#save-' + result.Data.User.ID).button({
                    icons: {
                        primary: "ui-icon-disk"
                    }
                }).click(function () {
                    saveRecord(result.Data.User.ID);
                    return false;
                });
                $('#cancel-' + result.Data.User.ID).button({
                    icons: {
                        primary: "ui-icon-close"
                    }
                }).click(function () {
                    cancelRecord();
                    return false;
                });
                
                $('.admin-record-detail').slideToggle(100);
                $('.admin-record-detail input:first-child').focus();
            });

            return false;
        });
    });

    function saveRecord(recordID) {
        var roles = Array();

        $('#assignedRoles-' + recordID + ' option').each(function (idx, e) {
            roles.push({ ID: $(e).val() });
        });

        var dataToSave = {
            User: {
                ID: recordID,
                Password: $('#password-' + recordID).val(),
                FirstName: $('#firstName-' + recordID).val(),
                LastName: $('#lastName-' + recordID).val(),
                CellPhone: $('#cellPhone-' + recordID).val(),
                Email: $('#email-' + recordID).val(),
                Address: $('#address-' + recordID).val(),
                Roles: roles
            },
            UserConfig: {
                UserID: recordID,
                BranchID: @SmsCache.UserContext.CurrentBranchId,
                IsSuspended: $('#suspended-' + recordID).prop('checked')
            }
        };

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateUserBranch")',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(dataToSave),
        }).done(function (result) {
            if (result.Success)
                location.reload();
        });
    }

    function cancelRecord() {
        $('.admin-record-detail').slideToggle(100, function () {
            $(this).remove();
        });
    }
</script>
