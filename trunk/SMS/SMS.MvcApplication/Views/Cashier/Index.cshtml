@using SMS.Common
@using SMS.MvcApplication.Models
@using SMS.Common.Constant
@model CashierModel
@{
    ViewBag.Title = "Index";
}
<link rel="stylesheet" type="text/css" href="~/Content/css/split-pane.css" />
<link rel="stylesheet" type="text/css" media="print" href="~/Content/css/print.css" />
<script type="text/javascript" src="~/Scripts/split-pane.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
<script type="text/javascript" src="~/Scripts/custom-validate.js"></script>
<script type="text/javascript">
    var listProduct = @Html.Raw(Json.Encode(Model.ListProduct));
    var listArea = @Html.Raw(Json.Encode(Model.ListArea));
    var serviceFee = @BranchConfig.ServiceFee;
    var useServiceFee = "@BranchConfig.UseServiceFee";
    var useKitchenFunction = "@BranchConfig.UseKitchenFunction";
    var useDiscountOnProduct = "@BranchConfig.UseDiscountOnProduct";
    var currency = "@BranchConfig.Currency";
</script>
<script id="order-tmpl" type="text/x-jquery-tmpl">
    {{each(idx) OrderTables}}
    <div class="row" id="orderTable-${ID}">
        <div class="row div-header">
            <div class="eleven columns">
                <span data-labelID="lblTableName" class="label-custom-label">Table name: </span><span class="label-custom-data">${Table.Name}</span>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <span data-labelID="lblOrderBy" class="label-custom-label">Order by: </span><span class="label-custom-data">${CreatedUser}</span>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <span data-labelID="lblOrderDate" class="label-custom-label">Order date: </span><span class="label-custom-data">${CreatedDate==null ? '' : CreatedDate.formatAsDateTime()}</span>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <span data-labelID="lblLastAccessBy" class="label-custom-label">Last access by: </span><span class="label-custom-data">${ModifiedUser}</span>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <span data-labelID="lblLastAccessDate" class="label-custom-label">Last access date: </span><span class="label-custom-data">${ModifiedDate==null ? '' : ModifiedDate.formatAsDateTime()}</span>
            </div>
            <div class="one columns right"><a href="#" id="removeTable-${ID}"><span class="ui-icon ui-icon-closethick float-right"></span></a></div>
        </div>
        <form id="form-table-order-${ID}">
            <table id="order-${ID}" class="table-order">
                <colgroup>
                    <col class="col1" />
                    <col class="col2" />
                    <col class="col3" />
                    <col class="col4" />
                    <col class="col5" />
                    <col class="col6 {{if useDiscountOnProduct != 'True' }}display-none{{/if}}" />
                    <col class="col7" />
                    <col class="col8" />
                    <col class="col9 {{if useKitchenFunction != 'True' }}display-none{{/if}}" />
                    <col class="col10" />
                </colgroup>
                <thead>
                    <tr>
                        <th><span data-labelID="lblNo">No</span></th>
                        <th><span data-labelID="lblProductName">Product Name</span></th>
                        <th><span data-labelID="lblQuantity">Quantity</span></th>
                        <th><span data-labelID="lblUnit">Unit</span></th>
                        <th><span data-labelID="lblPrice">Price</span></th>
                        <th class="{{if useDiscountOnProduct != 'True' }}display-none{{/if}}"><span data-labelID="lblDiscount">Discount</span></th>
                        <th><span data-labelID="lblAmount">Amount</span></th>
                        <th><span data-labelID="lblRemarks">Remarks</span></th>
                        <th class="{{if useKitchenFunction != 'True' }}display-none{{/if}}"></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="table-detail-${ID}">
                    {{each(idx) OrderDetails}}
                    <tr id="${ID}">
                        <td class="sequence">${idx + 1}</td>
                        <td>${Product.Name} - ${Product.ProductCode}</td>
                        <td>
                            <input type="text" id="qty-${ID}" value="${Quantity}" name="qty" class="number required center" />
                        </td>
                        <td>${Product.Unit.Name}</td>
                        <td class="right product-price">${Product.Price.formatAsMoney()}</td>
                        <td class="{{if useDiscountOnProduct != 'True' }}display-none{{/if}}">
                            <input type="text" id="discount-${ID}" class="number required right" name="qty" value="${Discount.formatAsMoney()}" />
                        </td>
                        <td class="right item_subtotal">${(Product.Price * Quantity - Discount).formatAsMoney()}</td>
                        <td>
                            <input type="text" id="cmt-${ID}" class="remarksInput" value="${Comment}" /></td>
                        <td class="center icon {{if useKitchenFunction != 'True' }}display-none{{/if}}">
                            <div class="{{if OrderStatus.ID == 1}}icon-transfer{{/if}}{{if OrderStatus.ID == 2}}icon-pending{{/if}}{{if OrderStatus.ID == 3}}icon-accept{{/if}}{{if OrderStatus.ID == 4}}icon-reject{{/if}}{{if OrderStatus.ID == 5}}icon-done{{/if}}" id="status-${ID}-${OrderStatus.ID}" title="${OrderStatus.Name}"></div>
                        </td>
                        <td class="center icon">
                            <div class="rmenu-delete" id="del-${ID}" title="Delete"></div>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="2" class="vertical-top">
                            <a href="#" id="addProduct-${ID}"><img src="Images/IconControls/add-icon.png" alt="add record" /></a>
                        </td>
                        <td colspan="8">
                            <div class="row">
                                <div class="two columns push_eight right"><span data-labelID="lblSubtotal">Sub total:</span></div>
                                <div class="two columns right"><span class="sub-total">0</span> @BranchConfig.Currency</div>
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </form>
    </div>
    {{/each}}
</script>
<script id="ordertable-tmpl" type="text/x-jquery-tmpl">
    {{each(idx) OrderDetails}}
    <tr id="${ID}">
        <td class="sequence">${idx + 1}</td>
        <td>${Product.Name} - ${Product.ProductCode}</td>
        <td>
            <input type="text" id="qty-${ID}" value="${Quantity}" name="qty" class="number required center" />
        </td>
        <td>${Product.Unit.Name}</td>
        <td class="right product-price">${Product.Price.formatAsMoney()}</td>
        <td class="{{if useDiscountOnProduct != 'True' }}display-none{{/if}}">
            <input type="text" id="discount-${ID}" class="number required right" value="${Discount.formatAsMoney()}" />
        </td>
        <td class="right item_subtotal">${(Product.Price * Quantity - Discount).formatAsMoney()}</td>
        <td>
            <input type="text" id="cmt-${ID}" class="remarksInput" value="${Comment}" /></td>
        <td class="center icon {{if useKitchenFunction != 'True' }}display-none{{/if}}">
            <div class="{{if OrderStatus.ID == 1}}icon-transfer{{/if}}{{if OrderStatus.ID == 2}}icon-pending{{/if}}{{if OrderStatus.ID == 3}}icon-accept{{/if}}{{if OrderStatus.ID == 4}}icon-reject{{/if}}{{if OrderStatus.ID == 5}}icon-done{{/if}}" id="status-${ID}-${OrderStatus.ID}" title="${OrderStatus.Name}"></div>
        </td>
        <td class="center icon">
            <div class="rmenu-delete" id="del-${ID}" title="Delete"></div>
        </td>
    </tr>
    {{/each}}    
</script>
<script id="table-tmpl" type="text/x-jquery-tmpl">
    {{each(idx) Data}}
    {{if idx % @ConstStyle.GridNumber == 0}}
    <div class='row' style="padding-top: 10px;">
        {{/if}}
        <div class="one column">
            <table class="tbls" id="${ID}-${Table.ID}-{{if Order != null}}${Order.ID}{{else}}0{{/if}}" title="${Table.Name}{{if Order != null}}-${Order.OrderNumber}{{/if}}">
                <tr>
                    <td class="table {{if ID > 0}}available{{else}}not-available{{/if}}"></td>
                </tr>
                <tr>
                    <td>${Table.Name}</td>
                </tr>
            </table>
        </div>
            
        {{if idx == $data.Data.length || idx % @ConstStyle.GridNumber == @ConstStyle.GridNumber - 1}}
    </div>
    {{/if}}
    {{/each}}
</script>
<script type="text/x-jquery-tmpl" id="invoice-preview-tmpl">
    <table id="ord-table">
        <colgroup>
            <col class="col1" />
            <col class="col2" />
            <col class="col3" />
            <col class="col4" />
            <col class="col5" />
        </colgroup>
        <thead>
            <tr>
                <th>No</th>
                <th>Product Code</th>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            {{each(idx) Data.InvoiceDetails}}
            <tr>
                <td>${idx + 1}</td>
                <td>${ProductCode}</td>
                <td>${ProductName}</td>
                <td class="right">${Quantity}</td>
                <td class="right">${(Price * Quantity).formatAsMoney()}</td>
            </tr>
            {{/each}}
        </tbody>
    </table>

</script>

<div id="cashier" class="split-pane horizontal-percent">
    <div id="area-table" class="split-pane-component">
        <ul id="areas">
            <li><a href="#area-0"><span data-labelID="lblAllArea">All</span></a></li>
            @foreach (var area in Model.ListArea)
            {
                <li><a href="#area-@area.ID">@area.Name</a></li>
            }

        </ul>
        <div id="tables">
            <div id="area-0"></div>
            @foreach (var areaDto in Model.ListArea)
            {
                <div id="area-@areaDto.ID"></div>
            }
        </div>
    </div>

    <div class="split-pane-divider"></div>
    
    <div id="tableorder" class="split-pane-component">
        <input type="hidden" id="curOrderID" value="-1" />
        <input type="hidden" id="curOrderTableID" value="-1" />
        <div class="row border-bottom div-header" id="order-header">
            <div class="four columns">
                <span data-labelID="lblOrderNumber" class="label-custom-label">Order Number:</span> <span id="curOrderNumber" class="label-custom-data"></span>
            </div>
            <div class="eight columns">
                <span data-labelID="lblCustomerName" id="lblCustomerName" class="searchCustomer label-custom-label">Customer name:</span>&nbsp;
                <span id="curCustomerName" class="label-custom-data"></span>
            </div>
        </div>
        
        <div id="order-detail">
        <div class="row" id="tblContent">
            
        </div>
        
            <div class="row" id="totalSection">
            @if(BranchConfig.UseServiceFee)
            {
                <div class="row" id="ServiceFree">
                    <div class="two columns push_eight right"><span data-labelID="lblServiceFee">Service Fee:</span></div>
                    <div class="two columns right"><span class="fee">@BranchConfig.ServiceFee</span> @BranchConfig.Currency</div>
                </div>
            }
            <div class="row" id="Tax-">
                <div class="two columns push_eight right"><span data-labelID="lblTax">Tax (10%):</span></div>
                <div class="two columns right"><span class="tax">0</span> @BranchConfig.Currency</div>
            </div>
            <div class="row">
                <div class="two columns push_eight right"><span data-labelID="lblTotalAmount">Total Amount:</span></div>
                <div class="two columns right border-top"><span class="total_amount">0</span> @BranchConfig.Currency</div>
            </div>
        </div>
            <div class="row">
                <div class="four columns right border-top payment">
                    <button id="payment"><span data-labelID="lblPayment">Thanh toán</span></button>
                    <button id="printInvoice"><span data-labelID="lblPrintInvoice">In trước hóa đơn</span></button>
                </div>
            </div>
        </div>
    </div>
    
    <table class="Rmenu" id="right-menu">
        <tr id="rmenu-detail">
            <td>
                <div class="rmenu-detail"></div>
            </td>
            <td class="RmenuItem"><span data-labelID="lblDetail">Chi tiết</span></td>
        </tr>
        <tr id="rmenu-useTable">
            <td>
                <div class="rmenu-add"></div>
            </td>
            <td class="RmenuItem"><span data-labelID="lblUseNow">Sử dụng ngay</span></td>
        </tr>
        <tr id="rmenu-move">
            <td>
                <div class="rmenu-move"></div>
            </td>
            <td class="RmenuItem"><span data-labelID="lblMoveTable">Chuyển bàn</span></td>
        </tr>
        <tr id="rmenu-del">
            <td>
                <div class="rmenu-delete"></div>
            </td>
            <td class="RmenuItem"><span data-labelID="lblDelete">Xóa thông tin</span></td>
        </tr>
    </table>
    <table class="Rmenu" id="changeCustomer">
        <tr>
            <td>
                <div class="menu-customer"></div>
            </td>
            <td class="RmenuItem">Change Customer</td>
        </tr>
    </table>
    <table class="Rmenu" id="mainRightMenu">
        <tr>
            <td>
                <div class="menu-reload"></div>
            </td>
            <td class="RmenuItem">Refresh</td>
        </tr>
    </table>

    @Html.Partial("SearchProductPopup", new PopupModel { PopupID = "pdtPopup", PopupTitle = "Search Product" })
    @Html.Partial("DestinationTablePopup", new PopupModel { PopupID = "destinationTablePopup", PopupTitle = "Select destination table" })
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('div.split-pane').splitPane();
        $('#area-table').tabs();
        $('#payment').hide();
        $('#printInvoice').hide();
        $("#payment").button({
            icons: {
                primary: "ui-icon-check"
            }
        });
        $('#printInvoice').button({
            icons: {
                primary: "ui-icon-print"
            }
        }).click(function () {
            var invoice = new PrintPreviewPopup(400, '@Url.Action("GetDataForPreviewInvoice")', getCurrentOrderTableId, null, $('#invoice-preview-tmpl'));
            invoice.OpenPopup();
            return false;
        });

        refreshTableArea();
            
        setInterval(function() {
            refreshTableArea();
        }, 60000);
        
        setInterval(function() {
            refreshOrderArea();
        }, 120000);
    });
    
    function refreshOrderArea() {
        var orderId = $('#curOrderID').val();
        if(orderId > 0) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetOrder")',
                data: { orderID: orderId }
            }).done(function (object) {
                if (object.Data.ID == 0 || !object.Success) {
                    clearDisplayTableDetail(orderId);
                }
                else {
                    $('#tblContent').html('');
                    $('#curOrderID').val(object.Data.ID);
                    $('#curOrderNumber').text(object.Data.OrderNumber);
                    $('#curCustomerName').text(object.Data.Customer.CustomerName);
                    $('#order-tmpl').tmpl(object.Data).scanLabel().appendTo('#tblContent');

                    bindEventForControl();

                    $("#payment").show();
                    $("#printInvoice").show();
                }
            });
        }
    }

    function getCurrentOrderTableId() {
        return { orderTableID: $('#curOrderTableID').val() };
    }
    
    $(document).on("click", '#areas li a[href*="area-"]', (function(e) {
        GetTablesByAreaID($(e.target).attr('href').split('-')[1]);
    }));

    function refreshTableArea() {
        var area = $('#areas li.ui-tabs-active a[href*="area-"]').attr('href');
        var id = area.split('-')[1];
        GetTablesByAreaID(id);
    }
        
    function clearDisplayTableDetail(orderId) {
        if ($('#curOrderID').val() == orderId) {
            $('#tblContent').html('');
            $('#curOrderID').val(-1);
            $('#curOrderNumber').text('');
            $('#curCustomerName').text('');
            $("#addProduct").hide();
            $("#payment").hide();
            $("#printInvoice").hide();
            CalculateTotal();
        }
    }
    
    $(document).on("click", 'a[id^="addProduct-"]', (function(e){
        var product = new SearchProductPopup("pdtPopup", listProduct, onRefreshProduct, onSelectProduct);
        product.OpenPopup();
        $('#curOrderTableID').val($(e.currentTarget).attr('id').split('-')[1]);
        return false;
    }));

    function onRemoveOrderTable(orderTableId, orderId) {
        if (orderTableId <= 0) {
            return;
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Action("CancelOrder")',
            data: { orderTableID: orderTableId }
        }).done(function(data) {
            if (data.Success) {
                clearDisplayTableDetail(orderId);
            } else {
                var popup = new MessagePopup('Thông báo',
                    'Có lỗi xảy ra trong quá trình thực thi.<br />Xin vui lòng thử lại sau.',
                    4,
                    function() {
                    });

                popup.OpenPopup();
            }

            refreshTableArea();
        });
    }

    function onMoveOrderTable(orderTableId, tableId) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("MoveTable")',
            data: { orderDetailID: orderTableId, tableID: tableId }
        }).done(function (data) {
            if(!data.Success) {
                var popup = new MessagePopup('Thông báo',
                    'Có lỗi xảy ra trong quá trình thực thi.<br />Xin vui lòng thử lại sau.',
                    4,
                    function() {
                    });

                popup.OpenPopup();
            } else {
                CalculateTotal();
            }
        });
    }
        
    $(document).on("dblclick", ".tbls", (function(e) {
        $(".tbls").removeClass('selected');
        $(e.target).parents('.tbls').addClass('selected');
        var id = $(e.target).parents('.tbls').attr('id');
        var orderTableId = id.split('-')[0];
        var tblId = id.split('-')[1];
        var orderId = id.split('-')[2];
        if(orderTableId == 0) {
            var popup = new MessagePopup('Thông báo',
                'Bàn này hiện đang trống.<br />Sử dụng ngay?',
                3,
                function () {
                    onCheckTableStatus(orderTableId, tblId);
                });
            
            popup.OpenPopup();
        } else {
            onSelectOrderTable(orderTableId, orderId);
        }
    }));
        
    $(document).on("contextmenu", "#cashier", function(e) {
        if($(e.target).parents('.tbls').length <= 0) {
            $("#right-menu").hide();
            displayCustomMenu('#mainRightMenu', e);
        } else {
            $('#mainRightMenu').hide();
            if (!$(e.target).parents('.tbls').hasClass('selected')) {
                $(".tbls").removeClass('selected');
                $(e.target).parents('.tbls').addClass('selected');
            }

            displayCustomMenu('#right-menu', e);
        }
    });
        
    $(document).click(function(e) {
        $("#right-menu").hide();
        $('#mainRightMenu').hide();
        
        if(!$(e.target).parents('table').hasClass('tbls')) {
            if ($(e.target).parents('#area-table').length > 0 || $(e.target).attr('id') == 'area-table')
                $(".tbls").removeClass('selected');
        }

        if($(e.target).attr('id') != 'lblCustomerName' || $(e.target).attr('id') == null)
            $("#changeCustomer").hide();
                
    });
    
    $(document).on("click", ".tbls", (function(e){
        if(e.ctrlKey) {
            if ($(e.target).parents('.tbls').hasClass('selected')) {
                $(e.target).parents('.tbls').removeClass('selected');
            } else {
                $(e.target).parents('.tbls').addClass('selected');
            }
        } else {
            $(".tbls").removeClass('selected');
            $(e.target).parents('.tbls').addClass('selected');
        }
    }));
        
    $(document).on("click", "#payment", (function(){
        var orderId = $('#curOrderID').val();
        if(orderId > 0) {
            var popup = new MessagePopup('Thông báo',
                'Bàn đã sẵn sàng để thanh toán.<br />Thanh toán ngay?',
                3,
                function () {
                    alert('abe');
                });
            
            popup.OpenPopup();
        }
    }));

    $(document).on("click", ".searchCustomer", (function(e){
        displayCustomMenu('#changeCustomer', e);
    }));
    
    $(document).on("click", "#mainRightMenu", (function(){
        refreshTableArea();
        refreshOrderArea();
    }));

    function updateOrderedProduct(e) {
        var colName = $(e).attr('id').split('-')[0]; 
        if(colName == 'qty') {
            if(!$(e).valid())
                return;
        }

        var orderDetailId = $(e).attr('id').split('-')[1];
        var value = $(e).val();
        
        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateOrderedProduct")',
            data: { orderDetailID: orderDetailId, columnName: colName, columnValue: value }
        }).done(function (data) {
            if(!data.Success) {
                var popup = new MessagePopup('Thông báo',
                    'Có lỗi xảy ra trong quá trình thực thi.<br />Xin vui lòng thử lại sau.',
                    4,
                    function() {
                    });

                popup.OpenPopup();
            } else {
                CalculateTotal();
            }
        });
    }
    
    function UpdateOrderedProductStatus(e) {
        var orderDetailId = $(e).attr('id').split('-')[1];
        var value = parseInt($(e).attr('id').split('-')[2]);
        
        switch (value) {
        case 1:
            value = 2;
            break;
        case 2:
            value = 3;
            break;
        case 3:
            value = 5;
            break;
        case 4:
            value = 5;
            break;
        case 5:
            return;
        }
        
        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateOrderedProductStatus")',
            data: { orderDetailID: orderDetailId, value: value }
        }).done(function (object) {
            if(object.Data.ID == 0 || !object.Success) {
                var popup = new MessagePopup('Thông báo',
                    'Có lỗi xảy ra trong quá trình thực thi.<br />Xin vui lòng thử lại sau.',
                    4,
                    function() {
                    });

                popup.OpenPopup();
            } else {
                $(e).attr('id', 'status-' + object.Data.ID + '-' + object.Data.OrderStatus.ID);
                $(e).attr('title', object.Data.OrderStatus.Name);
                var cssClass;
                switch (object.Data.OrderStatus.ID) {
                    case 1:
                        cssClass = 'transfer';
                        break;
                    case 2:
                        cssClass = 'pending';
                        break;
                    case 3:
                        cssClass = 'accept';
                        break;
                    case 4:
                        cssClass = 'reject';
                        break;
                    case 5:
                        cssClass = 'done';
                        break;
                    default : cssClass = 'done';
                }
                $(e).attr('class', 'icon-' + cssClass);
            }
        });
    }

    function onCheckTableStatus(orderTableId, tableId) {
        if (orderTableId == 0) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CheckTableStatus")',
                data: { tableID: tableId }
            }).done(function(data) {
                if (data.Success) {
                    var popup = new MessagePopup('Thông báo',
                        'Bàn này hiện đang được sử dụng.<br />Xin vui lòng thử lại.',
                        1,
                        function() {
                            refreshTableArea();
                        });

                    popup.OpenPopup();
                } else {
                    onCreateOrderTable(tableId);
                }
            });
        }else {
            onCreateOrderTable(tableId);
        }
    }

    function onDeleteOrderTable(e) {
        var orderTableId = $(e).attr('id').split('-')[1];
        if(orderTableId <= 0)
            return;
        else {
            var popup = new MessagePopup('Thông báo',
                'Bạn đang thực hiện xóa thông tin 1 bàn.<br />Bạn muốn thực hiện?',
                3,
                function() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CancelTable")',
                data: { orderTableID: orderTableId }
            }).done(function(data) {
                if (data.Success) {
                    refreshTableArea();
                    refreshOrderArea();
                }
            });
                });

            popup.OpenPopup();
        }
    }

    function onSelectOrderTable(orderTableId, orderId) {
        $("#right-menu").hide();
        if (orderTableId <= 0) {
            return;
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Action("SelectTable")',
            data: { orderTableID: orderTableId }
        }).done(function (object) {
            if (object.Data.ID == 0 || !object.Success) {
                var popup = new MessagePopup('Thông báo',
                    'Dữ liệu hiện không tồn tại.<br />Xin vui lòng thử lại.',
                    1,
                    function() {
                        refreshTableArea();
                        clearDisplayTableDetail(orderId);
                    });

                popup.OpenPopup();
            }
            else {
                $('#tblContent').html('');
                $('#curOrderID').val(object.Data.ID);
                $('#curOrderNumber').text(object.Data.OrderNumber);
                $('#curCustomerName').text(object.Data.Customer.CustomerName);
                $('#order-tmpl').tmpl(object.Data).scanLabel().appendTo('#tblContent');

                bindEventForControl();

                $("#payment").show();
                $("#printInvoice").show();
                refreshTableArea();
            }
        });
    }
        
    function onCreateOrderTable(tblId) {
        if (tblId <= 0) {
            return;
        }
        var orderTableId = 0;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("CreateOrderTable")',
            data: { tableID: tblId }
        }).done(function (object) {
            if(object.Success) {
                orderTableId = object.Data;
                onSelectOrderTable(orderTableId, 0);
                refreshTableArea();
            }
        });
        return;
    }

    function onRefreshProduct(reloadCallback) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetAllProductsForSearch")',
        }).done(function (result) {
            if(result.Success)
                listProduct = result.Data;
        });
            
        if(reloadCallback)
            reloadCallback(listProduct);
    }

    function onSelectProduct(pdtId, qty) {
        var orderTableId = $('#curOrderTableID').val();
        if(orderTableId != '' && orderTableId > 0) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("OrderProduct")',
                data: { orderTableID: orderTableId, productID: pdtId, quantity: qty }
            }).done(function(object) {
                if (object.Data.ID > 0 && object.Success) {
                    onLoadOrderTable(object);
                }
            });
        }
    }
    
    function onLoadOrderTable(object) {
        $('#table-detail-' + object.Data.ID).html('');
        $('#ordertable-tmpl').tmpl(object.Data).appendTo('#table-detail-' + object.Data.ID);

        bindEventForControl();
    }

    function bindEventForControl() {
        $('table[id^="order-"]').table();

        $('input[id^="qty"]').spinner({
            step: 0.5,
            numberFormat: "n",
            min: 0.5,
            change: function() {
                updateOrderedProduct(this);
            }
        });
        
        $('a[id^="removeTable-"]').click(function () {
            onDeleteOrderTable(this);
            return false;
        });
        
        $('input[id^="cmt"]').change(function() {
            updateOrderedProduct(this);
        });
        
        $('input[id^="discount"]').change(function() {
            updateOrderedProduct(this);
        });

        $('div[id^="del"]').click(function() {
            var orderDetailId = $(this).attr('id').split('-')[1];
            onDeleteProductFromOrderDetail(orderDetailId);
        });
        
        $('div[id^="status"]').click(function() {
            UpdateOrderedProductStatus(this);
        });
        
        $('form[id^="form-table-order-"]').validate({
            rules: {
                qty: {
                    greaterThanZero: true
                }
            }
        });

        CalculateTotal();
    }

    function onDeleteProductFromOrderDetail(orderDetailId) {
        if (orderDetailId != '' && orderDetailId > 0) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("RemoveOrderedProduct")',
                data: { orderDetailID: orderDetailId }
            }).done(function(data) {
                if (data.Success) {
                    $('tr[id="' + orderDetailId + '"').remove();
                    CalculateTotal();
                }
            });
        }
    }

    function GetTablesByAreaID(areaId) {
        if (areaId < 0) {
            return;
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetTablesByAreaID")',
            data: { areaID: areaId }
        }).done(function (object) {
            if(object.Success) {
                $('#area-' + areaId).html('');
                $('#rightMenuArea').html('');
                $('#table-tmpl').tmpl(object).appendTo('#area-' + areaId);

                $('.tbls').each(function(idx, element) {
                    var orderId = $('#curOrderID').val() == '' ? 0 : $('#curOrderID').val();
                    if ($(element).attr('id').split('-')[2] > 0 && $(element).attr('id').split('-')[2] == orderId)
                        $(element).addClass('selected');
                });
            }
        });
        return;
    }
    
    $(document).on("click", 'tr[id^="rmenu-"]', (function(){
        onSelectedItem(this);
    }));
    
    function onSelectedItem(e) {
        var action = $(e).attr('id');
        var data = [],
            arr = [],
            popup,
            valid = true,
            i;
        $('.tbls').each(function(idx, element) {
            if($(element).hasClass('selected')) {
                var orderTableId = $(element).attr('id').split('-')[0];
                var tableId = $(element).attr('id').split('-')[1];
                var orderId = $(element).attr('id').split('-')[2];
                
                data[data.length] = { OrderTableID: orderTableId, TableID: tableId, OrderID: orderId };
            }
        });
        
        if(action == 'rmenu-detail') {
            if(data.length > 1) {
                popup = new MessagePopup('Thông báo',
                    'Thao tác không chính xác.<br />Xin vui lòng chọn một bàn để xem chi tiết.',
                    1,
                    function() {
                        refreshTableArea();
                    });

                popup.OpenPopup();
            } else {
                if(data[0].OrderTableID > 0)
                    onSelectOrderTable(data[0].OrderTableID, data[0].OrderID);
            }
        }else if(action == 'rmenu-useTable') {
            if(data.length > 1) 
            {
                for (i = 0; i < data.length; i++)
                {
                    if(data[i].OrderTableID > 0) {
                        valid = false;
                        break;
                    }
                    arr[arr.length] = data[i].TableID;
                }
                if(!valid) {
                    popup = new MessagePopup('Thông báo',
                        'Thao tác không chính xác.<br />Xin vui lòng thử lại.',
                        1,
                        function() {
                            refreshTableArea();
                        });
                    popup.OpenPopup();
                }else {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("CreateMultiOrderTable")',
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ table: arr })
                    }).done(function(object) {
                        if (object.Success && object.Data > 0) {
                            $('#curOrderID').val(object.Data);
                            refreshTableArea();
                            refreshOrderArea();
                        }
                    });
                    return false;
                }
            } else {
                onCheckTableStatus(data[0].OrderTableID, data[0].TableID);
                return false;
            }
        }else if(action == 'rmenu-move') {
            if(data.length > 1) {
                popup = new MessagePopup('Thông báo',
                    'Thao tác không chính xác. Chỉ có thể chuyển dữ liệu từng bàn<br />Xin vui lòng thử lại.',
                    1,
                    function() {
                        refreshTableArea();
                    });

                popup.OpenPopup();
            } else {
                if(data[0].OrderTableID > 0) {
                    popup = new DestinationTablePopup("destinationTablePopup", data[0].OrderTableID, listArea, '@Url.Action("GetTablesByAreaID")', onMoveOrderTable);
                    popup.OpenPopup();
                }
            }
        }else if(action == 'rmenu-del') {
            for (i = 0; i < data.length; i++) {
                if (data[i].OrderID > 0) {
                    arr[arr.length] = data[i].OrderID;
                }
            }
            if (arr.length > 0) {
                popup = new MessagePopup('Thông báo',
                    'Thao tác xóa thông tin các bàn được chọn.<br />Bạn muốn thực hiện?',
                    3,
                    function() {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("RemoveMultiOrder")',
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ order: arr })
                        }).done(function(object) {
                            if (object.Success) {
                                refreshTableArea();
                                refreshOrderArea();
                            }
                        });
                        return false;
                    });

                popup.OpenPopup();
            }
        }
        return false;
    }
        
    function displayCustomMenu(menuName, event) {
        var $menu = $(menuName);
        var $wMenu = $menu.outerWidth();
        var $hMenu = $menu.outerHeight();
        var $leftM = event.clientX, $topM = event.clientY;
        var $rightM = $(window).width() - $leftM;

        var $bottomM = $(window).height() - $topM;
        if ($rightM < $wMenu) {
            $leftM -= $wMenu;
        }
        if ($bottomM < $hMenu) {
            $topM -= $hMenu;
        }
        $menu.css({ left: $leftM, top: $topM, display: 'block' });
        event.preventDefault();
    }
    
    function CalculateTotal() {
        var subTotal;
        var totalAmount = 0;
        
        $('table[id^="order-"]').each(function(idx, e) {
            subTotal = 0;
            $(e).find('tbody[id^="table-detail-"] tr').each(function(index, element) {
                var qty = $(element).find('td input[id^="qty"]').val();
                var price = $(element).find('td.product-price').text().readMoneyAsNumber();
                var discount = $(element).find('td input[id^="discount"]').val().readMoneyAsNumber();
                var total = qty*price - discount ;
                subTotal += total;
                $(element).find('td.sequence').text(index + 1);
                $(element).find('td.item_subtotal').text(total.formatAsMoney());
            });
            
            totalAmount += subTotal;
            $(e).find('.sub-total').text(subTotal.formatAsMoney());
        });
        
        $('#totalSection .total_amount').text(totalAmount.formatAsMoney());
    }
</script>