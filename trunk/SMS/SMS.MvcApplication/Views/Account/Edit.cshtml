@using SMS.Common.Constant
@using SMS.Common.Storage.Message
@using SMS.MvcApplication.Models
@model UserProfileModel

<script src="@Url.Content("~/Scripts/jquery.fileupload.js")"></script>

<script type="text/javascript">
    var user = @Html.Raw(JsonEncode(Model.UserBasic));
    var userConfig = @Html.Raw(JsonEncode(Model.UserConfig));
</script>

<div id="content" class="row">
    <div class="row float-left" id="edit-profile">
        <fieldset>
            <legend>User infomation</legend>
            <form method="POST" enctype="multipart/form-data">
                <table class="no-border">
                    <colgroup>
                        <col class="col1" />
                        <col class="col2" />
                        <col class="col3" />
                    </colgroup>
                    <tbody>
                        <tr>
                            <td>User name</td>
                            <td>@Model.UserBasic.Username</td>
                            <td rowspan="6" id="image-profile">
                                <div id="profileImage">
                                    <div id="image-preview">
                                        <img id="user-profile" alt="profile" src="~/Images/default.jpg"/>
                                    </div>
                                    <span class="fileinput-button" title="upload photo">
                                        <img id="capture" alt="capture" src="~/Images/IconControls/capture-icon.png"/>
                                        <input type="file" name="uploadedFile" id="fileupload" accept="image/jpg, image/jpeg, image/png" />
                                    </span>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>First name</td>
                            <td><input type="text" value="@Model.UserBasic.FirstName"/></td>
                        </tr>
                        <tr>
                            <td>Last name</td>
                            <td><input type="text" value="@Model.UserBasic.LastName"/></td>
                        </tr>
                        <tr>
                            <td>Cell phone</td>
                            <td><input type="text" value="@Model.UserBasic.CellPhone"/></td>
                        </tr>
                        <tr>
                            <td>Email</td>
                            <td><input type="text" value="@Model.UserBasic.Email"/></td>
                        </tr>
                        <tr>
                            <td>Address</td>
                            <td><input type="text" value="@Model.UserBasic.Address"/></td>
                        </tr>
                    
                        <tr>
                            <td>Theme</td>
                            <td>
                                <select id="theme">
                                    <option value="ui-lightness">ui-lightness</option>
                                    <option value="redmond">redmond</option>
                                    <option value="blitzer">blitzer</option>
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" class="center">
                                <button id="update" data-labelID="lblUpdate">Update</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </form>
        </fieldset>
    </div>
</div>

<script type="text/javascript">
    var imgs = null;
    $(document).ready(function() {
        $('#theme').selectmenu();
        var theme = userConfig.Theme;
        $('#theme').val(theme);

        $('#update').button({
            icons: {
                primary: "ui-icon-disk"
            }
        }).click(function () {
            $(this).form.submit();
        });

        $('#fileupload').change(function() {
            if (!(/(\.jpg|\.jpeg|\.png)$/i).test($(this).val().toLowerCase())) {
                alert("Incorrect file format. Please try again.");
                var popup = new MessagePopup('@SystemMessages.Get(ConstMessageIds.Popup_Title_Error)',
                    '@SystemMessages.Get(ConstMessageIds.Popup_Message_IncorrectFileFormat)',
                    4);

                popup.OpenPopup();
            } else
                previewImage($(this)[0].files[0]);
        });

        @*$('#fileupload').fileupload({
            type: 'POST',
            url: '@Url.Action("Upload")',
            add: function (e, data) {
                var uploadFile = data.files[0];
                if (!(/(\.jpg|\.jpeg|\.png)$/i).test(uploadFile.name) ) {
                    alert("Incorrect file format. Please try again.");
                    var popup = new MessagePopup('@SystemMessages.Get(ConstMessageIds.Popup_Title_Error)',
                        '@SystemMessages.Get(ConstMessageIds.Popup_Message_IncorrectFileFormat)',
                        4);

                    popup.OpenPopup();
                }
                else
                    previewImage(uploadFile);
            },
            fileExt: '*.jpg;*.jpeg;*.png',
            // Handles the server side validation on file type
            done: function (e, data) {
                var error = data.response().result.Data;
                if(error == "") {
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: '@Url.Action("getProfileImage")',
                        contentType: 'application/json',
                        dataType: "json",
                        success: function (result) {
                            imgs = result;
                            displayImage(imgs.base64imgage);
                        },
                        error: function (xhr) {
                            alert("Error occurred while loading the image. "
                                + xhr.responseText);
                        }
                    });
                }
            },
            progressall: function (e, data) {
                // Handle the progress bar
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#progress .bar').css('width', progress + '%' );
            }
        });
        
        var displayImage = function (base64Data) {
            var imag = "<img "
                     + "src='" + "data:image/jpg;base64,"
                     + base64Data + "'/>";

            $(this).append(imag);
        };*@
        
        function previewImage(uploadFile) {
            $('#image-preview').html('');
            if (typeof (FileReader) != 'undefined') {
                $('#image-preview').show();
                $('#image-preview').append('<img id="user-profile" />');
                var reader = new FileReader();
                reader.onload = function(e) {
                    $('#image-preview img#user-profile').attr('src', e.target.result);
                };
                reader.readAsDataURL(uploadFile);
            } else {
                var popup = new MessagePopup('@SystemMessages.Get(ConstMessageIds.Popup_Title_Error)',
                '@SystemMessages.Get(ConstMessageIds.Popup_Message_FileReaderNotSupported)',
                4);

                popup.OpenPopup();
            }
        }
    });
</script>